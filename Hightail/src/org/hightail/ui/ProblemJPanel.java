/*
 * ProblemJPanel.java
 *
 * Created on 2011-02-17, 23:13:02
 */

package org.hightail.ui;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.hightail.Problem;
import org.hightail.Testcase;


public class ProblemJPanel extends javax.swing.JPanel {

    protected Problem problem;
    protected JTabbedPane parentTabbedPane; // used for deletion of tab (in the future)
    protected JFrame parentWindow; // used as parent for modal dialogs
    private TestTableModel testTableModel; // used to notify testTable about the testcaseSet changes

    /** Creates new form ProblemJPanel */
    public ProblemJPanel(Problem problem, JTabbedPane tabbedPane, JFrame parentWindow) {
        this.problem = problem;
        this.testTableModel = new TestTableModel(problem.getTestcaseSet());
        this.parentTabbedPane = tabbedPane;
        this.parentWindow = parentWindow;

        initComponents();

        ListSelectionListener listSelectionListener = new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                 boolean enable = !(testTable.getSelectionModel().isSelectionEmpty());
                 editTestcaseButton.setEnabled(enable);
                 deleteTestcaseButton.setEnabled(enable);
            }
        };
        testTable.getSelectionModel().addListSelectionListener(listSelectionListener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sourceFilePanel = new javax.swing.JPanel();
        sourceFileLabel = new javax.swing.JLabel();
        sourceFile = new javax.swing.JTextField();
        reopenButton = new javax.swing.JButton();
        openContainingDirectoryButton = new javax.swing.JButton();
        copyPathToClipboardButton = new javax.swing.JButton();
        progressPanel = new javax.swing.JPanel();
        testcasePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        testTable = new javax.swing.JTable();
        testTable.setDefaultRenderer(String.class, new MultilineTableCellRenderer());
        newTestcaseButton = new javax.swing.JButton();
        editTestcaseButton = new javax.swing.JButton();
        deleteTestcaseButton = new javax.swing.JButton();

        sourceFilePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Source file"));

        sourceFileLabel.setText("Path to file:");

        reopenButton.setText("Reopen file in editor");

        openContainingDirectoryButton.setText("Open containing directory");

        copyPathToClipboardButton.setText("Copy path to clipboard");

        javax.swing.GroupLayout sourceFilePanelLayout = new javax.swing.GroupLayout(sourceFilePanel);
        sourceFilePanel.setLayout(sourceFilePanelLayout);
        sourceFilePanelLayout.setHorizontalGroup(
            sourceFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourceFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sourceFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sourceFilePanelLayout.createSequentialGroup()
                        .addComponent(reopenButton)
                        .addGap(18, 18, 18)
                        .addComponent(openContainingDirectoryButton)
                        .addGap(18, 18, 18)
                        .addComponent(copyPathToClipboardButton))
                    .addGroup(sourceFilePanelLayout.createSequentialGroup()
                        .addComponent(sourceFileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sourceFile, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sourceFilePanelLayout.setVerticalGroup(
            sourceFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourceFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sourceFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceFileLabel)
                    .addComponent(sourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sourceFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(copyPathToClipboardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(openContainingDirectoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reopenButton, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        progressPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Progress and results"));

        javax.swing.GroupLayout progressPanelLayout = new javax.swing.GroupLayout(progressPanel);
        progressPanel.setLayout(progressPanelLayout);
        progressPanelLayout.setHorizontalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        progressPanelLayout.setVerticalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        testcasePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Test cases"));

        testTable.setModel(testTableModel);
        jScrollPane1.setViewportView(testTable);

        newTestcaseButton.setText("New test case");
        newTestcaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTestcaseButtonActionPerformed(evt);
            }
        });

        editTestcaseButton.setText("Inspect and edit");
        editTestcaseButton.setEnabled(false);
        editTestcaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTestcaseButtonActionPerformed(evt);
            }
        });

        deleteTestcaseButton.setText("Delete test case");
        deleteTestcaseButton.setEnabled(false);
        deleteTestcaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTestcaseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout testcasePanelLayout = new javax.swing.GroupLayout(testcasePanel);
        testcasePanel.setLayout(testcasePanelLayout);
        testcasePanelLayout.setHorizontalGroup(
            testcasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testcasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newTestcaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editTestcaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteTestcaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(292, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
        );
        testcasePanelLayout.setVerticalGroup(
            testcasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testcasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(testcasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newTestcaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editTestcaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteTestcaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(progressPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(testcasePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sourceFilePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sourceFilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(testcasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newTestcaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTestcaseButtonActionPerformed
        Testcase newTestcase = new Testcase();
        TestcaseJDialog dialog = new TestcaseJDialog(parentWindow, newTestcase, true);
        dialog.setVisible(true); // this is modal; it will block until window is closed
        if (dialog.getReturnValue()) {
            // we need to add the newTestcase
            problem.addTestcase(newTestcase);
            testTableModel.rowInserted();
        }
    }//GEN-LAST:event_newTestcaseButtonActionPerformed

    private void editTestcaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTestcaseButtonActionPerformed
        int selectedRow = testTable.getSelectedRow();
        if (selectedRow == -1) throw new UnsupportedOperationException("Implementation error: edit button clicked, but no row selected");
        Testcase editedTestcase = problem.getTestcase(selectedRow);
        TestcaseJDialog dialog = new TestcaseJDialog(parentWindow, editedTestcase, false);
        dialog.setVisible(true); // this is modal; it will block until window is closed
        if (dialog.getReturnValue()) {
            // the test case was edited
            testTableModel.rowUpdated(selectedRow);
        }
    }//GEN-LAST:event_editTestcaseButtonActionPerformed

    private void deleteTestcaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTestcaseButtonActionPerformed
        int selectedRow = testTable.getSelectedRow();
        if (selectedRow == -1) throw new UnsupportedOperationException("Implementation error: delete button clicked, but no row selected");
        // display confirm dialog
        int confirmed = JOptionPane.showConfirmDialog(this, "Are you sure?", "Confirm delete", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            // we need to delete
            problem.deleteTestcase(selectedRow);
            testTableModel.rowDeleted(selectedRow);
        }
    }//GEN-LAST:event_deleteTestcaseButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton copyPathToClipboardButton;
    private javax.swing.JButton deleteTestcaseButton;
    private javax.swing.JButton editTestcaseButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newTestcaseButton;
    private javax.swing.JButton openContainingDirectoryButton;
    private javax.swing.JPanel progressPanel;
    private javax.swing.JButton reopenButton;
    private javax.swing.JTextField sourceFile;
    private javax.swing.JLabel sourceFileLabel;
    private javax.swing.JPanel sourceFilePanel;
    private javax.swing.JTable testTable;
    private javax.swing.JPanel testcasePanel;
    // End of variables declaration//GEN-END:variables

}
