/*
 * MainJFrame.java
 *
 * Created on 2011-02-17, 20:55:27
 */

package org.hightail.ui;

//import java.awt.Insets;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
//import javax.swing.UIManager.LookAndFeelInfo;
import org.hightail.Config;
import org.hightail.Problem;
import org.hightail.exception.CommandExecutionException;
import org.hightail.exception.FileCopyException;

public class MainJFrame extends javax.swing.JFrame {

    /** Creates new form MainJFrame */
    @SuppressWarnings("LeakingThisInConstructor")
    public MainJFrame() {
        initComponents();

        // We load the configuration
        boolean ok = Config.load();
        if (!ok) { // couldn't load
            JOptionPane.showMessageDialog(this,
                    "The settings file could not be loaded.\n"
                    +"A new one will be created now, in the same directory as the program.\n"
                    +"Make sure to configure the program before usage.",
                    "Hightail",
                    JOptionPane.INFORMATION_MESSAGE);
            try {
                Config.save();
            } catch (IOException e2) {
                JOptionPane.showMessageDialog(this, 
                        "The configuration file could not be created. Make sure the program has write rights to its directory.",
                        "Output error",
                        JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newEmpty = new javax.swing.JMenuItem();
        openConfig = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Hightail");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabbedPane.setFont(new java.awt.Font("Tahoma", 1, 13));

        fileMenu.setText("File");

        newEmpty.setText("New empty tab...");
        newEmpty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmptyActionPerformed(evt);
            }
        });
        fileMenu.add(newEmpty);

        openConfig.setText("Settings...");
        openConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openConfigActionPerformed(evt);
            }
        });
        fileMenu.add(openConfig);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        fileMenu.add(exit);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");

        about.setText("About...");
        helpMenu.add(about);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newEmptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmptyActionPerformed
        // Show the user a dialog to type the name
        String s = (String)JOptionPane.showInputDialog(this, "Enter problem name:");
        if (s == null) {
            // user clicked Cancel; we do nothing
        } else if (s.length() < 1 || s.length() > Problem.PROBLEM_NAME_MAX_LENGTH) {
            JOptionPane.showMessageDialog(this, "Problem name empty or too long.", "Wrong name", JOptionPane.ERROR_MESSAGE);
        } else {
            createNewProblemAndTab(s);
        }
    }//GEN-LAST:event_newEmptyActionPerformed

    protected void createNewProblemAndTab(String name) {
        try {
            Problem problem = new Problem(name);
            ProblemJPanel panel = new ProblemJPanel(problem, tabbedPane, this);

            // as recommended here: http://stackoverflow.com/questions/476678/tabs-with-equal-constant-width-in-jtabbedpane
            tabbedPane.addTab("<html><body><table width='150'>"+name+"</table></body></html>",panel);
            tabbedPane.setSelectedComponent(panel);
        } catch (FileCopyException e) {
            JOptionPane.showMessageDialog(this,
                    "Could not make a new source file from template file:\n\n" + e,
                    "File copy error",
                    JOptionPane.ERROR_MESSAGE);
        } catch (CommandExecutionException e) {
            JOptionPane.showMessageDialog(this,
                    "Error while executing command:\n\n" + e.getCommand() + "\n\n" + e,
                    "Error executing command",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void confirmAndClose () {
        // Display confirm dialog
        int confirmed = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to quit?",
                "Confirm quit",
                JOptionPane.YES_NO_OPTION);

        // Close iff user confirmed
        if (confirmed == JOptionPane.YES_OPTION) {
            this.dispose();
            System.exit(0);
        }
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        confirmAndClose();
    }//GEN-LAST:event_formWindowClosing

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        confirmAndClose();
    }//GEN-LAST:event_exitActionPerformed

    private void openConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openConfigActionPerformed
        new ConfigJDialog(this).setVisible(true);
    }//GEN-LAST:event_openConfigActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        // We set the look and feel for Swing
        try {
            /*for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }*/
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            //UIManager.put("TabbedPane.tabInsets", new Insets(5,20,6,20));
        } catch (Exception e) {
            // We fall back to Metal
        }

        // And we let the application run
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newEmpty;
    private javax.swing.JMenuItem openConfig;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

}
